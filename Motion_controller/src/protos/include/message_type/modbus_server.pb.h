/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.7-dev at Mon Dec  3 15:24:31 2018. */

#ifndef PB_MESSAGETYPE_MODBUS_SERVER_PB_H_INCLUDED
#define PB_MESSAGETYPE_MODBUS_SERVER_PB_H_INCLUDED
#include <pb.h>

#include "message_type/modbus_server_function.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _MessageType_ModbusServerFunctionInfo {
    MessageType_ModbusServerFunctionType type;
    uint32_t address;
    uint32_t quantity;
/* @@protoc_insertion_point(struct:MessageType_ModbusServerFunctionInfo) */
} MessageType_ModbusServerFunctionInfo;

typedef struct _MessageType_ModbusServerConfig {
    pb_size_t config_count;
    MessageType_ModbusServerFunctionInfo config[4];
/* @@protoc_insertion_point(struct:MessageType_ModbusServerConfig) */
} MessageType_ModbusServerConfig;

/* Default values for struct fields */

/* Initializer values for message structs */
#define MessageType_ModbusServerFunctionInfo_init_default {(MessageType_ModbusServerFunctionType)0, 0, 0}
#define MessageType_ModbusServerConfig_init_default {0, {MessageType_ModbusServerFunctionInfo_init_default, MessageType_ModbusServerFunctionInfo_init_default, MessageType_ModbusServerFunctionInfo_init_default, MessageType_ModbusServerFunctionInfo_init_default}}
#define MessageType_ModbusServerFunctionInfo_init_zero {(MessageType_ModbusServerFunctionType)0, 0, 0}
#define MessageType_ModbusServerConfig_init_zero {0, {MessageType_ModbusServerFunctionInfo_init_zero, MessageType_ModbusServerFunctionInfo_init_zero, MessageType_ModbusServerFunctionInfo_init_zero, MessageType_ModbusServerFunctionInfo_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define MessageType_ModbusServerFunctionInfo_type_tag 1
#define MessageType_ModbusServerFunctionInfo_address_tag 2
#define MessageType_ModbusServerFunctionInfo_quantity_tag 3
#define MessageType_ModbusServerConfig_config_tag 1

/* Struct field encoding specification for nanopb */
extern const pb_field_t MessageType_ModbusServerFunctionInfo_fields[4];
extern const pb_field_t MessageType_ModbusServerConfig_fields[2];

/* Maximum encoded size of messages (where known) */
#define MessageType_ModbusServerFunctionInfo_size 14
#define MessageType_ModbusServerConfig_size      64

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MODBUS_SERVER_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
