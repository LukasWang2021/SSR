/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.7-dev at Mon Jul 30 15:41:17 2018. */

#ifndef PB_MESSAGETYPE_JOINT_LIST_PB_H_INCLUDED
#define PB_MESSAGETYPE_JOINT_LIST_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _MessageType_JointList {
    pb_size_t joint_count;
    double joint[9];
/* @@protoc_insertion_point(struct:MessageType_JointList) */
} MessageType_JointList;

/* Default values for struct fields */

/* Initializer values for message structs */
#define MessageType_JointList_init_default       {0, {0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define MessageType_JointList_init_zero          {0, {0, 0, 0, 0, 0, 0, 0, 0, 0}}

/* Field tags (for use in manual encoding/decoding) */
#define MessageType_JointList_joint_tag          1

/* Struct field encoding specification for nanopb */
extern const pb_field_t MessageType_JointList_fields[2];

/* Maximum encoded size of messages (where known) */
#define MessageType_JointList_size               81

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define JOINT_LIST_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
