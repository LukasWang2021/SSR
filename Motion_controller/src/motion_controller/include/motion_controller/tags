!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AXIS_LIMIT	trajplan.h	/^		double AXIS_LIMIT[4][6] ;$/;"	m	class:fst_controller::TrajPlan
ArmGroup	lib_controller.h	/^    class ArmGroup$/;"	c	namespace:fst_controller
Cartesian_Path_Exist	fst_datatype.h	/^	Cartesian_Path_Exist	= 101020,$/;"	e	enum:Error::ErrorCode_
Cmd_Parameter_Error	fst_datatype.h	/^	Cmd_Parameter_Error	= 101030,$/;"	e	enum:Error::ErrorCode_
Cmd_Sequence_Error	fst_datatype.h	/^	Cmd_Sequence_Error	= 101031,$/;"	e	enum:Error::ErrorCode_
CommandType	fst_datatype.h	/^    enum CommandType {$/;"	g	namespace:fst_controller
DH	trajplan.h	/^		double DH[6][4] ;$/;"	m	class:fst_controller::TrajPlan
Error	fst_datatype.h	/^namespace Error$/;"	n
ErrorCode	fst_datatype.h	/^typedef Error::ErrorCode_ ErrorCode;$/;"	t
ErrorCode_	fst_datatype.h	/^    enum ErrorCode_ {$/;"	g	namespace:Error
Euler	fst_datatype.h	/^    struct Euler {$/;"	s	namespace:fst_controller
FK_Out_Of_Joint_Limit	fst_datatype.h	/^	FK_Out_Of_Joint_Limit	= 1011,$/;"	e	enum:Error::ErrorCode_
FST_CONTROLLER_H	lib_controller.h	12;"	d
FST_DATATYPE_H	fst_datatype.h	11;"	d
Fail_Init_Algerithm	fst_datatype.h	/^	Fail_Init_Algerithm	= 100000,$/;"	e	enum:Error::ErrorCode_
Fail_Load_Constraint	fst_datatype.h	/^	Fail_Load_Constraint	= 100001,$/;"	e	enum:Error::ErrorCode_
IK_Excessive_Distance	fst_datatype.h	/^	IK_Excessive_Distance	= 1003,$/;"	e	enum:Error::ErrorCode_
IK_Joint_Out_Of_Limit	fst_datatype.h	/^	IK_Joint_Out_Of_Limit	= 1002,$/;"	e	enum:Error::ErrorCode_
IK_Out_Of_Workspace	fst_datatype.h	/^	IK_Out_Of_Workspace	= 1001,$/;"	e	enum:Error::ErrorCode_
InvT66	trajplan.h	/^		double InvT66[4][4] ;$/;"	m	class:fst_controller::TrajPlan
InvTF	trajplan.h	/^		double InvTF[4][4] ;$/;"	m	class:fst_controller::TrajPlan
InvUF	trajplan.h	/^		double InvUF[4][4] ;$/;"	m	class:fst_controller::TrajPlan
JointConstraints	fst_datatype.h	/^    struct JointConstraints {$/;"	s	namespace:fst_controller
JointLimit	fst_datatype.h	/^    struct JointLimit {$/;"	s	namespace:fst_controller
JointPoint	fst_datatype.h	/^    struct JointPoint {$/;"	s	namespace:fst_controller
JointValues	fst_datatype.h	/^    struct JointValues {$/;"	s	namespace:fst_controller
JointVelocity	fst_datatype.h	/^    struct JointVelocity {$/;"	s	namespace:fst_controller
Joint_Out_Of_Limit	fst_datatype.h	/^	Joint_Out_Of_Limit	= 101000,$/;"	e	enum:Error::ErrorCode_
MoveJ_Axis_Near_Limit	fst_datatype.h	/^	MoveJ_Axis_Near_Limit	= 1032,$/;"	e	enum:Error::ErrorCode_
MoveJ_Axis_Overshoot	fst_datatype.h	/^	MoveJ_Axis_Overshoot	= 1031,$/;"	e	enum:Error::ErrorCode_
MoveL_Unsmoothable	fst_datatype.h	/^	MoveL_Unsmoothable	= 1021,$/;"	e	enum:Error::ErrorCode_
MoveL_Zero_Distance	fst_datatype.h	/^	MoveL_Zero_Distance	= 1022,$/;"	e	enum:Error::ErrorCode_
No_Enough_Points	fst_datatype.h	/^	No_Enough_Points	= 101010,$/;"	e	enum:Error::ErrorCode_
PathPoint	fst_datatype.h	/^    struct PathPoint {$/;"	s	namespace:fst_controller
Point	fst_datatype.h	/^    struct Point {$/;"	s	namespace:fst_controller
PointLevel	fst_datatype.h	/^    enum PointLevel {$/;"	g	namespace:fst_controller
Pose	fst_datatype.h	/^    struct Pose {$/;"	s	namespace:fst_controller
PoseEuler	fst_datatype.h	/^    struct PoseEuler {$/;"	s	namespace:fst_controller
Quaternion	fst_datatype.h	/^    struct Quaternion {$/;"	s	namespace:fst_controller
Success	fst_datatype.h	/^	Success		= 0,$/;"	e	enum:Error::ErrorCode_
ToolFrame	trajplan.h	/^		double ToolFrame[4][4];$/;"	m	class:fst_controller::TrajPlan
TrajPlan	trajplan.h	/^	class TrajPlan$/;"	c	namespace:fst_controller
Trajectory_FIFO_Full	fst_datatype.h	/^	Trajectory_FIFO_Full	= 101002,$/;"	e	enum:Error::ErrorCode_
Trajectory_FIFO_Locked	fst_datatype.h	/^	Trajectory_FIFO_Locked	= 101001,$/;"	e	enum:Error::ErrorCode_
Transformation	fst_datatype.h	/^    struct Transformation {$/;"	s	namespace:fst_controller
Undefined_Error	fst_datatype.h	/^	Undefined_Error = 1,$/;"	e	enum:Error::ErrorCode_
UserFrame	trajplan.h	/^		double 	UserFrame[4][4] ;$/;"	m	class:fst_controller::TrajPlan
_trajplan_h	trajplan.h	2;"	d
a	fst_datatype.h	/^	double a;$/;"	m	struct:fst_controller::Euler
a1	trajplan.h	/^		double a1;$/;"	m	class:fst_controller::TrajPlan
a2	trajplan.h	/^		double a2 ;$/;"	m	class:fst_controller::TrajPlan
a3	trajplan.h	/^		double a3 ;$/;"	m	class:fst_controller::TrajPlan
acc	trajplan.h	/^		double acc;$/;"	m	class:fst_controller::TrajPlan
accelerationoverload	trajplan.h	/^		double accelerationoverload;$/;"	m	class:fst_controller::TrajPlan
b	fst_datatype.h	/^	double b;$/;"	m	struct:fst_controller::Euler
c	fst_datatype.h	/^	double c;$/;"	m	struct:fst_controller::Euler
d1	trajplan.h	/^		double d1 ;$/;"	m	class:fst_controller::TrajPlan
d3	trajplan.h	/^		double d3 ;$/;"	m	class:fst_controller::TrajPlan
d4	trajplan.h	/^		double d4 ;$/;"	m	class:fst_controller::TrajPlan
enum_Level_Ending	fst_datatype.h	/^	enum_Level_Ending   = 2,$/;"	e	enum:fst_controller::PointLevel
enum_Level_Middle	fst_datatype.h	/^	enum_Level_Middle   = 0,$/;"	e	enum:fst_controller::PointLevel
enum_Level_Start	fst_datatype.h	/^	enum_Level_Start    = 1,$/;"	e	enum:fst_controller::PointLevel
enum_Type_Cartesian	fst_datatype.h	/^	enum_Type_Cartesian$/;"	e	enum:fst_controller::CommandType
enum_Type_Joint	fst_datatype.h	/^	enum_Type_Joint,$/;"	e	enum:fst_controller::CommandType
errorangle	trajplan.h	/^		double errorangle;$/;"	m	class:fst_controller::TrajPlan
fst_controller	fst_datatype.h	/^namespace fst_controller$/;"	n
fst_controller	lib_controller.h	/^namespace fst_controller$/;"	n
fst_controller	trajplan.h	/^namespace fst_controller$/;"	n
home	fst_datatype.h	/^	double home;$/;"	m	struct:fst_controller::JointLimit
id	fst_datatype.h	/^	int id;$/;"	m	struct:fst_controller::JointPoint
id	fst_datatype.h	/^	int id;$/;"	m	struct:fst_controller::PathPoint
j1	fst_datatype.h	/^	JointLimit j1;$/;"	m	struct:fst_controller::JointConstraints
j1	fst_datatype.h	/^	double j1;$/;"	m	struct:fst_controller::JointValues
j1	fst_datatype.h	/^	double j1;$/;"	m	struct:fst_controller::JointVelocity
j2	fst_datatype.h	/^	JointLimit j2;$/;"	m	struct:fst_controller::JointConstraints
j2	fst_datatype.h	/^	double j2;$/;"	m	struct:fst_controller::JointValues
j2	fst_datatype.h	/^	double j2;$/;"	m	struct:fst_controller::JointVelocity
j3	fst_datatype.h	/^	JointLimit j3;$/;"	m	struct:fst_controller::JointConstraints
j3	fst_datatype.h	/^	double j3;$/;"	m	struct:fst_controller::JointValues
j3	fst_datatype.h	/^	double j3;$/;"	m	struct:fst_controller::JointVelocity
j4	fst_datatype.h	/^	JointLimit j4;$/;"	m	struct:fst_controller::JointConstraints
j4	fst_datatype.h	/^	double j4;$/;"	m	struct:fst_controller::JointValues
j4	fst_datatype.h	/^	double j4;$/;"	m	struct:fst_controller::JointVelocity
j5	fst_datatype.h	/^	JointLimit j5;$/;"	m	struct:fst_controller::JointConstraints
j5	fst_datatype.h	/^	double j5;$/;"	m	struct:fst_controller::JointValues
j5	fst_datatype.h	/^	double j5;$/;"	m	struct:fst_controller::JointVelocity
j6	fst_datatype.h	/^	JointLimit j6;$/;"	m	struct:fst_controller::JointConstraints
j6	fst_datatype.h	/^	double j6;$/;"	m	struct:fst_controller::JointValues
j6	fst_datatype.h	/^	double j6;$/;"	m	struct:fst_controller::JointVelocity
joints	fst_datatype.h	/^	    JointValues joints;$/;"	m	union:fst_controller::PathPoint::__anon1
joints	fst_datatype.h	/^	JointValues joints;$/;"	m	struct:fst_controller::JointPoint
limit_scale	trajplan.h	/^		double limit_scale;          \/\/速度限制，各轴参考速度的倍数$/;"	m	class:fst_controller::TrajPlan
lower	fst_datatype.h	/^	double lower;$/;"	m	struct:fst_controller::JointLimit
m_AMAX	lib_controller.h	/^	double m_AMAX;		\/\/ Unit: mm\/(s*s)$/;"	m	class:fst_controller::ArmGroup
m_CYCLE_TIME_LOWER	lib_controller.h	/^	double m_CYCLE_TIME_LOWER;\/\/ Unit: s$/;"	m	class:fst_controller::ArmGroup
m_CYCLE_TIME_UPPER	lib_controller.h	/^	double m_CYCLE_TIME_UPPER;	\/\/ Unit: s$/;"	m	class:fst_controller::ArmGroup
m_JOINT_FIFO_LEN	lib_controller.h	/^	int    m_JOINT_FIFO_LEN;$/;"	m	class:fst_controller::ArmGroup
m_VMAX	lib_controller.h	/^	double m_VMAX;		\/\/ Unit: mm\/s$/;"	m	class:fst_controller::ArmGroup
m_amax	lib_controller.h	/^	double m_amax;$/;"	m	class:fst_controller::ArmGroup
m_amax_scaling_factor	lib_controller.h	/^	double m_amax_scaling_factor;$/;"	m	class:fst_controller::ArmGroup
m_cycle_time	lib_controller.h	/^	double m_cycle_time;$/;"	m	class:fst_controller::ArmGroup
m_joint_constraints	lib_controller.h	/^	fst_controller::JointConstraints m_joint_constraints;$/;"	m	class:fst_controller::ArmGroup
m_joint_start	lib_controller.h	/^	JointPoint m_joint_start;$/;"	m	class:fst_controller::ArmGroup
m_joint_state_current	lib_controller.h	/^	fst_controller::JointValues m_joint_state_current;$/;"	m	class:fst_controller::ArmGroup
m_joint_trajectory_FIFO_islocked	lib_controller.h	/^	bool m_joint_trajectory_FIFO_islocked;$/;"	m	class:fst_controller::ArmGroup
m_joint_trajectory_fifo	lib_controller.h	/^	std::vector<fst_controller::JointPoint> m_joint_trajectory_fifo;$/;"	m	class:fst_controller::ArmGroup
m_jump_threshold_scaling	lib_controller.h	/^	double m_jump_threshold_scaling;$/;"	m	class:fst_controller::ArmGroup
m_latest_ik_reference	lib_controller.h	/^	fst_controller::JointValues m_latest_ik_reference;$/;"	m	class:fst_controller::ArmGroup
m_planned_path_fifo	lib_controller.h	/^	std::vector<fst_controller::PathPoint> m_planned_path_fifo;$/;"	m	class:fst_controller::ArmGroup
m_planner	lib_controller.h	/^	fst_controller::TrajPlan *m_planner;$/;"	m	class:fst_controller::ArmGroup
m_point_level	lib_controller.h	/^	PointLevel m_point_level;$/;"	m	class:fst_controller::ArmGroup
m_pose_previous	lib_controller.h	/^	Pose m_pose_previous;$/;"	m	class:fst_controller::ArmGroup
m_pose_start	lib_controller.h	/^	Pose m_pose_start;$/;"	m	class:fst_controller::ArmGroup
m_pose_state_current	lib_controller.h	/^	fst_controller::Pose m_pose_state_current;$/;"	m	class:fst_controller::ArmGroup
m_tool_frame	lib_controller.h	/^	fst_controller::Transformation m_tool_frame;$/;"	m	class:fst_controller::ArmGroup
m_user_frame	lib_controller.h	/^	fst_controller::Transformation m_user_frame;$/;"	m	class:fst_controller::ArmGroup
m_v_start	lib_controller.h	/^	double m_v_start;$/;"	m	class:fst_controller::ArmGroup
m_vmax	lib_controller.h	/^	double m_vmax;$/;"	m	class:fst_controller::ArmGroup
m_vmax_scaling_factor	lib_controller.h	/^	double m_vmax_scaling_factor;$/;"	m	class:fst_controller::ArmGroup
m_vu_start	lib_controller.h	/^	double m_vu_start;$/;"	m	class:fst_controller::ArmGroup
max_alpha	fst_datatype.h	/^	double max_alpha;$/;"	m	struct:fst_controller::JointLimit
max_omega	fst_datatype.h	/^	double max_omega;$/;"	m	struct:fst_controller::JointLimit
offset1	trajplan.h	/^		double offset1 ;$/;"	m	class:fst_controller::TrajPlan
offset2	trajplan.h	/^		double offset2;$/;"	m	class:fst_controller::TrajPlan
offset3	trajplan.h	/^		double offset3 ;$/;"	m	class:fst_controller::TrajPlan
offset4	trajplan.h	/^		double offset4;$/;"	m	class:fst_controller::TrajPlan
offset5	trajplan.h	/^		double offset5 ;$/;"	m	class:fst_controller::TrajPlan
offset6	trajplan.h	/^		double offset6 ;$/;"	m	class:fst_controller::TrajPlan
omegas	fst_datatype.h	/^	JointVelocity omegas;$/;"	m	struct:fst_controller::JointPoint
orientation	fst_datatype.h	/^	Euler orientation;$/;"	m	struct:fst_controller::PoseEuler
orientation	fst_datatype.h	/^	Euler orientation;$/;"	m	struct:fst_controller::Transformation
orientation	fst_datatype.h	/^	Quaternion orientation;$/;"	m	struct:fst_controller::Pose
overshoot	trajplan.h	/^		double overshoot;$/;"	m	class:fst_controller::TrajPlan
pi	trajplan.h	/^		double  pi;$/;"	m	class:fst_controller::TrajPlan
pose	fst_datatype.h	/^	    Pose pose;$/;"	m	union:fst_controller::PathPoint::__anon1
position	fst_datatype.h	/^	Point position;$/;"	m	struct:fst_controller::Pose
position	fst_datatype.h	/^	Point position;$/;"	m	struct:fst_controller::PoseEuler
position	fst_datatype.h	/^	Point position;$/;"	m	struct:fst_controller::Transformation
tc	trajplan.h	/^		double tc;$/;"	m	class:fst_controller::TrajPlan
tool_frame	fst_datatype.h	/^	int tool_frame;$/;"	m	struct:fst_controller::PathPoint
type	fst_datatype.h	/^	CommandType type;$/;"	m	struct:fst_controller::PathPoint
upper	fst_datatype.h	/^	double upper;$/;"	m	struct:fst_controller::JointLimit
user_frame	fst_datatype.h	/^	int user_frame;$/;"	m	struct:fst_controller::PathPoint
velocity	fst_datatype.h	/^	double velocity;$/;"	m	struct:fst_controller::PathPoint
w	fst_datatype.h	/^	double w;$/;"	m	struct:fst_controller::Quaternion
x	fst_datatype.h	/^	double x;$/;"	m	struct:fst_controller::Point
x	fst_datatype.h	/^	double x;$/;"	m	struct:fst_controller::Quaternion
y	fst_datatype.h	/^	double y;$/;"	m	struct:fst_controller::Point
y	fst_datatype.h	/^	double y;$/;"	m	struct:fst_controller::Quaternion
z	fst_datatype.h	/^	double z;$/;"	m	struct:fst_controller::Point
z	fst_datatype.h	/^	double z;$/;"	m	struct:fst_controller::Quaternion
