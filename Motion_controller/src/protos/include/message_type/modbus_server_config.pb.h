/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.7-dev at Fri Dec  7 14:10:11 2018. */

#ifndef PB_MESSAGETYPE_MODBUS_SERVER_CONFIG_PB_H_INCLUDED
#define PB_MESSAGETYPE_MODBUS_SERVER_CONFIG_PB_H_INCLUDED
#include <pb.h>

#include "message_type/modbus_function.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _MessageType_ModbusServerConfig {
    MessageType_ModbusFunctionAddrInfo coil;
    MessageType_ModbusFunctionAddrInfo discrepte_input;
    MessageType_ModbusFunctionAddrInfo holding_reg;
    MessageType_ModbusFunctionAddrInfo input_reg;
    int32_t response_delay;
/* @@protoc_insertion_point(struct:MessageType_ModbusServerConfig) */
} MessageType_ModbusServerConfig;

/* Default values for struct fields */

/* Initializer values for message structs */
#define MessageType_ModbusServerConfig_init_default {MessageType_ModbusFunctionAddrInfo_init_default, MessageType_ModbusFunctionAddrInfo_init_default, MessageType_ModbusFunctionAddrInfo_init_default, MessageType_ModbusFunctionAddrInfo_init_default, 0}
#define MessageType_ModbusServerConfig_init_zero {MessageType_ModbusFunctionAddrInfo_init_zero, MessageType_ModbusFunctionAddrInfo_init_zero, MessageType_ModbusFunctionAddrInfo_init_zero, MessageType_ModbusFunctionAddrInfo_init_zero, 0}

/* Field tags (for use in manual encoding/decoding) */
#define MessageType_ModbusServerConfig_coil_tag  1
#define MessageType_ModbusServerConfig_discrepte_input_tag 2
#define MessageType_ModbusServerConfig_holding_reg_tag 3
#define MessageType_ModbusServerConfig_input_reg_tag 4
#define MessageType_ModbusServerConfig_response_delay_tag 5

/* Struct field encoding specification for nanopb */
extern const pb_field_t MessageType_ModbusServerConfig_fields[6];

/* Maximum encoded size of messages (where known) */
#define MessageType_ModbusServerConfig_size      107

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MODBUS_SERVER_CONFIG_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
