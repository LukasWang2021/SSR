/* Automatically generated nanopb constant definitions */
/* Generated by nanopb-0.3.7-dev at Tue Aug  9 22:23:01 2016. */

#include "motionSL.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif



const pb_field_t motion_spec_DHParameters_fields[5] = {
    PB_FIELD(  1, DOUBLE  , REQUIRED, STATIC  , FIRST, motion_spec_DHParameters, linkLength, linkLength, 0),
    PB_FIELD(  2, DOUBLE  , REQUIRED, STATIC  , OTHER, motion_spec_DHParameters, linkTwist, linkLength, 0),
    PB_FIELD(  3, DOUBLE  , REQUIRED, STATIC  , OTHER, motion_spec_DHParameters, linkOffset, linkTwist, 0),
    PB_FIELD(  4, DOUBLE  , OPTIONAL, STATIC  , OTHER, motion_spec_DHParameters, jointAngle, linkOffset, 0),
    PB_LAST_FIELD
};

const pb_field_t motion_spec_ToolTipOffset_fields[7] = {
    PB_FIELD(  1, DOUBLE  , REQUIRED, STATIC  , FIRST, motion_spec_ToolTipOffset, offsetX, offsetX, 0),
    PB_FIELD(  2, DOUBLE  , REQUIRED, STATIC  , OTHER, motion_spec_ToolTipOffset, offsetY, offsetX, 0),
    PB_FIELD(  3, DOUBLE  , REQUIRED, STATIC  , OTHER, motion_spec_ToolTipOffset, offsetZ, offsetY, 0),
    PB_FIELD(  4, DOUBLE  , REQUIRED, STATIC  , OTHER, motion_spec_ToolTipOffset, offsetA, offsetZ, 0),
    PB_FIELD(  5, DOUBLE  , REQUIRED, STATIC  , OTHER, motion_spec_ToolTipOffset, offsetB, offsetA, 0),
    PB_FIELD(  6, DOUBLE  , REQUIRED, STATIC  , OTHER, motion_spec_ToolTipOffset, offsetC, offsetB, 0),
    PB_LAST_FIELD
};

const pb_field_t motion_spec_SegmentDHParameters_fields[3] = {
    PB_FIELD(  1, UINT32  , REQUIRED, STATIC  , FIRST, motion_spec_SegmentDHParameters, segmentNumber, segmentNumber, 0),
    PB_FIELD(  2, MESSAGE , REQUIRED, STATIC  , OTHER, motion_spec_SegmentDHParameters, dhParameter, segmentNumber, &motion_spec_DHParameters_fields),
    PB_LAST_FIELD
};

const pb_field_t motion_spec_ChainDHParameters_fields[2] = {
    PB_FIELD(  1, MESSAGE , REPEATED, CALLBACK, FIRST, motion_spec_ChainDHParameters, dhParameterList, dhParameterList, &motion_spec_SegmentDHParameters_fields),
    PB_LAST_FIELD
};

const pb_field_t motion_spec_MoveL_fields[7] = {
    PB_FIELD(  1, DOUBLE  , REPEATED, STATIC  , FIRST, motion_spec_MoveL, targetPose, targetPose, 0),
    PB_FIELD(  2, DOUBLE  , REQUIRED, STATIC  , OTHER, motion_spec_MoveL, vMax, targetPose, 0),
    PB_FIELD(  3, DOUBLE  , REQUIRED, STATIC  , OTHER, motion_spec_MoveL, aMax, vMax, 0),
    PB_FIELD(  4, DOUBLE  , OPTIONAL, STATIC  , OTHER, motion_spec_MoveL, smoothDistance, aMax, 0),
    PB_FIELD(  5, DOUBLE  , OPTIONAL, STATIC  , OTHER, motion_spec_MoveL, omegaMax, smoothDistance, 0),
    PB_FIELD(  6, DOUBLE  , OPTIONAL, STATIC  , OTHER, motion_spec_MoveL, alfaMax, omegaMax, 0),
    PB_LAST_FIELD
};

const pb_field_t motion_spec_MoveJ_fields[5] = {
    PB_FIELD(  1, DOUBLE  , REPEATED, STATIC  , FIRST, motion_spec_MoveJ, targetPose, targetPose, 0),
    PB_FIELD(  2, DOUBLE  , REQUIRED, STATIC  , OTHER, motion_spec_MoveJ, vMax, targetPose, 0),
    PB_FIELD(  3, DOUBLE  , REQUIRED, STATIC  , OTHER, motion_spec_MoveJ, aMax, vMax, 0),
    PB_FIELD(  4, DOUBLE  , OPTIONAL, STATIC  , OTHER, motion_spec_MoveJ, smoothDistance, aMax, 0),
    PB_LAST_FIELD
};

const pb_field_t motion_spec_SetOutput_fields[4] = {
    PB_FIELD(  1, STRING  , REQUIRED, CALLBACK, FIRST, motion_spec_SetOutput, path, path, 0),
    PB_FIELD(  2, BOOL    , REQUIRED, STATIC  , OTHER, motion_spec_SetOutput, value, path, 0),
    PB_FIELD(  3, DOUBLE  , OPTIONAL, STATIC  , OTHER, motion_spec_SetOutput, time_sec, value, 0),
    PB_LAST_FIELD
};

const pb_field_t motion_spec_Wait_fields[5] = {
    PB_FIELD(  1, STRING  , OPTIONAL, CALLBACK, FIRST, motion_spec_Wait, path, path, 0),
    PB_FIELD(  2, BOOL    , OPTIONAL, STATIC  , OTHER, motion_spec_Wait, value, path, 0),
    PB_FIELD(  3, DOUBLE  , OPTIONAL, STATIC  , OTHER, motion_spec_Wait, timeout, value, 0),
    PB_FIELD(  4, UINT32  , OPTIONAL, STATIC  , OTHER, motion_spec_Wait, error_code, timeout, 0),
    PB_LAST_FIELD
};

const pb_field_t motion_spec_MotionCommand_fields[4] = {
    PB_FIELD(  1, UINT32  , REQUIRED, STATIC  , FIRST, motion_spec_MotionCommand, id, id, 0),
    PB_FIELD(  2, UENUM   , REQUIRED, STATIC  , OTHER, motion_spec_MotionCommand, commandtype, id, 0),
    PB_FIELD(  3, BYTES   , REQUIRED, STATIC  , OTHER, motion_spec_MotionCommand, commandarguments, commandtype, 0),
    PB_LAST_FIELD
};

const pb_field_t motion_spec_MotionProgram_fields[4] = {
    PB_FIELD(  1, STRING  , REQUIRED, STATIC  , FIRST, motion_spec_MotionProgram, name, name, 0),
    PB_FIELD(  2, UINT32  , REQUIRED, STATIC  , OTHER, motion_spec_MotionProgram, id, name, 0),
    PB_FIELD(  3, MESSAGE , REPEATED, STATIC  , OTHER, motion_spec_MotionProgram, commandlist, id, &motion_spec_MotionCommand_fields),
    PB_LAST_FIELD
};


/* Check that field information fits in pb_field_t */
#if !defined(PB_FIELD_32BIT)
/* If you get an error here, it means that you need to define PB_FIELD_32BIT
 * compile-time option. You can do that in pb.h or on compiler command line.
 * 
 * The reason you need to do this is that some of your messages contain tag
 * numbers or field sizes that are larger than what can fit in 8 or 16 bit
 * field descriptors.
 */
PB_STATIC_ASSERT((pb_membersize(motion_spec_SegmentDHParameters, dhParameter) < 65536 && pb_membersize(motion_spec_ChainDHParameters, dhParameterList) < 65536 && pb_membersize(motion_spec_MotionProgram, commandlist[0]) < 65536), YOU_MUST_DEFINE_PB_FIELD_32BIT_FOR_MESSAGES_motion_spec_DHParameters_motion_spec_ToolTipOffset_motion_spec_SegmentDHParameters_motion_spec_ChainDHParameters_motion_spec_MoveL_motion_spec_MoveJ_motion_spec_SetOutput_motion_spec_Wait_motion_spec_MotionCommand_motion_spec_MotionProgram)
#endif

#if !defined(PB_FIELD_16BIT) && !defined(PB_FIELD_32BIT)
#error Field descriptor for motion_spec_MotionProgram.commandlist is too large. Define PB_FIELD_16BIT to fix this.
#endif


/* On some platforms (such as AVR), double is really float.
 * These are not directly supported by nanopb, but see example_avr_double.
 * To get rid of this error, remove any double fields from your .proto.
 */
PB_STATIC_ASSERT(sizeof(double) == 8, DOUBLE_MUST_BE_8_BYTES)

/* @@protoc_insertion_point(eof) */
