/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.7-dev at Tue Jun  4 17:12:47 2019. */

#ifndef PB_MESSAGETYPE_TOOL_FRAME_PB_H_INCLUDED
#define PB_MESSAGETYPE_TOOL_FRAME_PB_H_INCLUDED
#include <pb.h>

#include "message_type/base.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _MessageType_ToolInfo {
    int32_t id;
    char name[32];
    char comment[256];
    int32_t group_id;
    MessageType_DoubleList data;
/* @@protoc_insertion_point(struct:MessageType_ToolInfo) */
} MessageType_ToolInfo;

typedef struct _MessageType_ToolSummaryInfo {
    int32_t id;
    char name[32];
    char comment[256];
    int32_t group_id;
/* @@protoc_insertion_point(struct:MessageType_ToolSummaryInfo) */
} MessageType_ToolSummaryInfo;

typedef struct _MessageType_ToolSummaryList {
    pb_size_t tool_summary_info_count;
    MessageType_ToolSummaryInfo tool_summary_info[16];
/* @@protoc_insertion_point(struct:MessageType_ToolSummaryList) */
} MessageType_ToolSummaryList;

/* Default values for struct fields */

/* Initializer values for message structs */
#define MessageType_ToolInfo_init_default        {0, "", "", 0, MessageType_DoubleList_init_default}
#define MessageType_ToolSummaryInfo_init_default {0, "", "", 0}
#define MessageType_ToolSummaryList_init_default {0, {MessageType_ToolSummaryInfo_init_default, MessageType_ToolSummaryInfo_init_default, MessageType_ToolSummaryInfo_init_default, MessageType_ToolSummaryInfo_init_default, MessageType_ToolSummaryInfo_init_default, MessageType_ToolSummaryInfo_init_default, MessageType_ToolSummaryInfo_init_default, MessageType_ToolSummaryInfo_init_default, MessageType_ToolSummaryInfo_init_default, MessageType_ToolSummaryInfo_init_default, MessageType_ToolSummaryInfo_init_default, MessageType_ToolSummaryInfo_init_default, MessageType_ToolSummaryInfo_init_default, MessageType_ToolSummaryInfo_init_default, MessageType_ToolSummaryInfo_init_default, MessageType_ToolSummaryInfo_init_default}}
#define MessageType_ToolInfo_init_zero           {0, "", "", 0, MessageType_DoubleList_init_zero}
#define MessageType_ToolSummaryInfo_init_zero    {0, "", "", 0}
#define MessageType_ToolSummaryList_init_zero    {0, {MessageType_ToolSummaryInfo_init_zero, MessageType_ToolSummaryInfo_init_zero, MessageType_ToolSummaryInfo_init_zero, MessageType_ToolSummaryInfo_init_zero, MessageType_ToolSummaryInfo_init_zero, MessageType_ToolSummaryInfo_init_zero, MessageType_ToolSummaryInfo_init_zero, MessageType_ToolSummaryInfo_init_zero, MessageType_ToolSummaryInfo_init_zero, MessageType_ToolSummaryInfo_init_zero, MessageType_ToolSummaryInfo_init_zero, MessageType_ToolSummaryInfo_init_zero, MessageType_ToolSummaryInfo_init_zero, MessageType_ToolSummaryInfo_init_zero, MessageType_ToolSummaryInfo_init_zero, MessageType_ToolSummaryInfo_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define MessageType_ToolInfo_id_tag              1
#define MessageType_ToolInfo_name_tag            2
#define MessageType_ToolInfo_comment_tag         3
#define MessageType_ToolInfo_group_id_tag        4
#define MessageType_ToolInfo_data_tag            5
#define MessageType_ToolSummaryInfo_id_tag       1
#define MessageType_ToolSummaryInfo_name_tag     2
#define MessageType_ToolSummaryInfo_comment_tag  3
#define MessageType_ToolSummaryInfo_group_id_tag 4
#define MessageType_ToolSummaryList_tool_summary_info_tag 1

/* Struct field encoding specification for nanopb */
extern const pb_field_t MessageType_ToolInfo_fields[6];
extern const pb_field_t MessageType_ToolSummaryInfo_fields[5];
extern const pb_field_t MessageType_ToolSummaryList_fields[2];

/* Maximum encoded size of messages (where known) */
#define MessageType_ToolInfo_size                1470
#define MessageType_ToolSummaryInfo_size         315
#define MessageType_ToolSummaryList_size         5088

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define TOOL_FRAME_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
