/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.7 at Mon Jun  6 11:27:19 2022. */

#ifndef PB_REQUESTMESSAGETYPE_REQUEST_STRING_DOUBLE_PB_H_INCLUDED
#define PB_REQUESTMESSAGETYPE_REQUEST_STRING_DOUBLE_PB_H_INCLUDED
#include <pb.h>

#include "protocol/request_header.pb.h"

#include "protocol/comm.pb.h"

#include "message_type/base.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _RequestMessageType_String_Double {
    Request_Header header;
    Comm_Property property;
    MessageType_String data1;
    MessageType_Double data2;
/* @@protoc_insertion_point(struct:RequestMessageType_String_Double) */
} RequestMessageType_String_Double;

/* Default values for struct fields */

/* Initializer values for message structs */
#define RequestMessageType_String_Double_init_default {Request_Header_init_default, Comm_Property_init_default, MessageType_String_init_default, MessageType_Double_init_default}
#define RequestMessageType_String_Double_init_zero {Request_Header_init_zero, Comm_Property_init_zero, MessageType_String_init_zero, MessageType_Double_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define RequestMessageType_String_Double_header_tag 1
#define RequestMessageType_String_Double_property_tag 2
#define RequestMessageType_String_Double_data1_tag 3
#define RequestMessageType_String_Double_data2_tag 4

/* Struct field encoding specification for nanopb */
extern const pb_field_t RequestMessageType_String_Double_fields[5];

/* Maximum encoded size of messages (where known) */
#define RequestMessageType_String_Double_size    546

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define REQUEST_STRING_DOUBLE_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
