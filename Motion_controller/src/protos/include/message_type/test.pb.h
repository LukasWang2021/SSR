/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.7-dev at Thu Jul 19 17:03:57 2018. */

#ifndef PB_COMM_TEST_PB_H_INCLUDED
#define PB_COMM_TEST_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _comm_Authority {
    comm_Authority_TP = 0,
    comm_Authority_TP_SIMMULATOR = 1,
    comm_Authority_ADMINISTRATOR = 2
} comm_Authority;
#define _comm_Authority_MIN comm_Authority_TP
#define _comm_Authority_MAX comm_Authority_ADMINISTRATOR
#define _comm_Authority_ARRAYSIZE ((comm_Authority)(comm_Authority_ADMINISTRATOR+1))

/* Struct definitions */
typedef struct _comm_MessageTypeAddPublish {
    int32_t topic_hash;
    int32_t time_min;
    int32_t time_max;
    pb_size_t element_hash_list_count;
    int32_t element_hash_list[128];
/* @@protoc_insertion_point(struct:comm_MessageTypeAddPublish) */
} comm_MessageTypeAddPublish;

typedef struct _comm_MessageTypeBool {
    bool data;
/* @@protoc_insertion_point(struct:comm_MessageTypeBool) */
} comm_MessageTypeBool;

typedef struct _comm_MessageTypeDeletePublish {
    int32_t topic_hash;
/* @@protoc_insertion_point(struct:comm_MessageTypeDeletePublish) */
} comm_MessageTypeDeletePublish;

typedef struct _comm_MessageTypeInt32 {
    int32_t data;
/* @@protoc_insertion_point(struct:comm_MessageTypeInt32) */
} comm_MessageTypeInt32;

typedef struct _comm_PoseEuler {
    double x;
    double y;
    double z;
    double a;
    double b;
    double c;
/* @@protoc_insertion_point(struct:comm_PoseEuler) */
} comm_PoseEuler;

typedef struct _comm_Property {
    comm_Authority authority;
/* @@protoc_insertion_point(struct:comm_Property) */
} comm_Property;

typedef PB_BYTES_ARRAY_T(1024) comm_PublishElement_data_t;
typedef struct _comm_PublishElement {
    int32_t hash;
    comm_PublishElement_data_t data;
/* @@protoc_insertion_point(struct:comm_PublishElement) */
} comm_PublishElement;

typedef struct _comm_RequestHeader {
    uint64_t time_stamp;
/* @@protoc_insertion_point(struct:comm_RequestHeader) */
} comm_RequestHeader;

typedef struct _comm_ResponseHeader {
    uint64_t time_stamp;
    bool succeed;
    int32_t package_left;
/* @@protoc_insertion_point(struct:comm_ResponseHeader) */
} comm_ResponseHeader;

typedef struct _comm_MessageTypeFrame {
    int32_t id;
    char comment[128];
    comm_PoseEuler pose_euler;
    bool has_is_valid;
    bool is_valid;
/* @@protoc_insertion_point(struct:comm_MessageTypeFrame) */
} comm_MessageTypeFrame;

typedef struct _comm_Publish {
    uint64_t time_stamp;
    pb_size_t element_count;
    comm_PublishElement element[128];
/* @@protoc_insertion_point(struct:comm_Publish) */
} comm_Publish;

typedef struct _comm_RequestAddPublish {
    comm_RequestHeader header;
    comm_Property property;
    comm_MessageTypeAddPublish data;
/* @@protoc_insertion_point(struct:comm_RequestAddPublish) */
} comm_RequestAddPublish;

typedef struct _comm_RequestDeletePublish {
    comm_RequestHeader header;
    comm_Property property;
    comm_MessageTypeDeletePublish data;
/* @@protoc_insertion_point(struct:comm_RequestDeletePublish) */
} comm_RequestDeletePublish;

typedef struct _comm_RequestMessageTypeInt32 {
    comm_RequestHeader header;
    comm_Property property;
    comm_MessageTypeInt32 data;
/* @@protoc_insertion_point(struct:comm_RequestMessageTypeInt32) */
} comm_RequestMessageTypeInt32;

typedef struct _comm_RequestMessageTypeVoid {
    comm_RequestHeader header;
    comm_Property property;
/* @@protoc_insertion_point(struct:comm_RequestMessageTypeVoid) */
} comm_RequestMessageTypeVoid;

typedef struct _comm_ResponseBool {
    comm_ResponseHeader header;
    comm_Property property;
    comm_MessageTypeBool data;
/* @@protoc_insertion_point(struct:comm_ResponseBool) */
} comm_ResponseBool;

typedef struct _comm_ResponseMessageTypeInt32 {
    comm_ResponseHeader header;
    comm_Property property;
    comm_MessageTypeInt32 data;
/* @@protoc_insertion_point(struct:comm_ResponseMessageTypeInt32) */
} comm_ResponseMessageTypeInt32;

typedef struct _comm_RequestMessageTypeFrame {
    comm_RequestHeader header;
    comm_Property property;
    comm_MessageTypeFrame data;
/* @@protoc_insertion_point(struct:comm_RequestMessageTypeFrame) */
} comm_RequestMessageTypeFrame;

/* Default values for struct fields */

/* Initializer values for message structs */
#define comm_RequestHeader_init_default          {0}
#define comm_ResponseHeader_init_default         {0, 0, 0}
#define comm_Property_init_default               {(comm_Authority)0}
#define comm_MessageTypeBool_init_default        {0}
#define comm_MessageTypeInt32_init_default       {0}
#define comm_RequestMessageTypeInt32_init_default {comm_RequestHeader_init_default, comm_Property_init_default, comm_MessageTypeInt32_init_default}
#define comm_RequestMessageTypeVoid_init_default {comm_RequestHeader_init_default, comm_Property_init_default}
#define comm_ResponseMessageTypeInt32_init_default {comm_ResponseHeader_init_default, comm_Property_init_default, comm_MessageTypeInt32_init_default}
#define comm_PublishElement_init_default         {0, {0, {0}}}
#define comm_Publish_init_default                {0, 0, {comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default, comm_PublishElement_init_default}}
#define comm_MessageTypeAddPublish_init_default  {0, 0, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define comm_MessageTypeDeletePublish_init_default {0}
#define comm_RequestAddPublish_init_default      {comm_RequestHeader_init_default, comm_Property_init_default, comm_MessageTypeAddPublish_init_default}
#define comm_RequestDeletePublish_init_default   {comm_RequestHeader_init_default, comm_Property_init_default, comm_MessageTypeDeletePublish_init_default}
#define comm_ResponseBool_init_default           {comm_ResponseHeader_init_default, comm_Property_init_default, comm_MessageTypeBool_init_default}
#define comm_PoseEuler_init_default              {0, 0, 0, 0, 0, 0}
#define comm_MessageTypeFrame_init_default       {0, "", comm_PoseEuler_init_default, false, 0}
#define comm_RequestMessageTypeFrame_init_default {comm_RequestHeader_init_default, comm_Property_init_default, comm_MessageTypeFrame_init_default}
#define comm_RequestHeader_init_zero             {0}
#define comm_ResponseHeader_init_zero            {0, 0, 0}
#define comm_Property_init_zero                  {(comm_Authority)0}
#define comm_MessageTypeBool_init_zero           {0}
#define comm_MessageTypeInt32_init_zero          {0}
#define comm_RequestMessageTypeInt32_init_zero   {comm_RequestHeader_init_zero, comm_Property_init_zero, comm_MessageTypeInt32_init_zero}
#define comm_RequestMessageTypeVoid_init_zero    {comm_RequestHeader_init_zero, comm_Property_init_zero}
#define comm_ResponseMessageTypeInt32_init_zero  {comm_ResponseHeader_init_zero, comm_Property_init_zero, comm_MessageTypeInt32_init_zero}
#define comm_PublishElement_init_zero            {0, {0, {0}}}
#define comm_Publish_init_zero                   {0, 0, {comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero, comm_PublishElement_init_zero}}
#define comm_MessageTypeAddPublish_init_zero     {0, 0, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define comm_MessageTypeDeletePublish_init_zero  {0}
#define comm_RequestAddPublish_init_zero         {comm_RequestHeader_init_zero, comm_Property_init_zero, comm_MessageTypeAddPublish_init_zero}
#define comm_RequestDeletePublish_init_zero      {comm_RequestHeader_init_zero, comm_Property_init_zero, comm_MessageTypeDeletePublish_init_zero}
#define comm_ResponseBool_init_zero              {comm_ResponseHeader_init_zero, comm_Property_init_zero, comm_MessageTypeBool_init_zero}
#define comm_PoseEuler_init_zero                 {0, 0, 0, 0, 0, 0}
#define comm_MessageTypeFrame_init_zero          {0, "", comm_PoseEuler_init_zero, false, 0}
#define comm_RequestMessageTypeFrame_init_zero   {comm_RequestHeader_init_zero, comm_Property_init_zero, comm_MessageTypeFrame_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define comm_MessageTypeAddPublish_topic_hash_tag 1
#define comm_MessageTypeAddPublish_time_min_tag  2
#define comm_MessageTypeAddPublish_time_max_tag  3
#define comm_MessageTypeAddPublish_element_hash_list_tag 4
#define comm_MessageTypeBool_data_tag            1
#define comm_MessageTypeDeletePublish_topic_hash_tag 1
#define comm_MessageTypeInt32_data_tag           1
#define comm_PoseEuler_x_tag                     1
#define comm_PoseEuler_y_tag                     2
#define comm_PoseEuler_z_tag                     3
#define comm_PoseEuler_a_tag                     4
#define comm_PoseEuler_b_tag                     5
#define comm_PoseEuler_c_tag                     6
#define comm_Property_authority_tag              1
#define comm_PublishElement_hash_tag             1
#define comm_PublishElement_data_tag             2
#define comm_RequestHeader_time_stamp_tag        1
#define comm_ResponseHeader_time_stamp_tag       1
#define comm_ResponseHeader_succeed_tag          2
#define comm_ResponseHeader_package_left_tag     3
#define comm_MessageTypeFrame_id_tag             1
#define comm_MessageTypeFrame_comment_tag        2
#define comm_MessageTypeFrame_pose_euler_tag     3
#define comm_MessageTypeFrame_is_valid_tag       4
#define comm_Publish_time_stamp_tag              1
#define comm_Publish_element_tag                 2
#define comm_RequestAddPublish_header_tag        1
#define comm_RequestAddPublish_property_tag      2
#define comm_RequestAddPublish_data_tag          3
#define comm_RequestDeletePublish_header_tag     1
#define comm_RequestDeletePublish_property_tag   2
#define comm_RequestDeletePublish_data_tag       3
#define comm_RequestMessageTypeInt32_header_tag  1
#define comm_RequestMessageTypeInt32_property_tag 2
#define comm_RequestMessageTypeInt32_data_tag    3
#define comm_RequestMessageTypeVoid_header_tag   1
#define comm_RequestMessageTypeVoid_property_tag 2
#define comm_ResponseBool_header_tag             1
#define comm_ResponseBool_property_tag           2
#define comm_ResponseBool_data_tag               3
#define comm_ResponseMessageTypeInt32_header_tag 1
#define comm_ResponseMessageTypeInt32_property_tag 2
#define comm_ResponseMessageTypeInt32_data_tag   3
#define comm_RequestMessageTypeFrame_header_tag  1
#define comm_RequestMessageTypeFrame_property_tag 2
#define comm_RequestMessageTypeFrame_data_tag    3

/* Struct field encoding specification for nanopb */
extern const pb_field_t comm_RequestHeader_fields[2];
extern const pb_field_t comm_ResponseHeader_fields[4];
extern const pb_field_t comm_Property_fields[2];
extern const pb_field_t comm_MessageTypeBool_fields[2];
extern const pb_field_t comm_MessageTypeInt32_fields[2];
extern const pb_field_t comm_RequestMessageTypeInt32_fields[4];
extern const pb_field_t comm_RequestMessageTypeVoid_fields[3];
extern const pb_field_t comm_ResponseMessageTypeInt32_fields[4];
extern const pb_field_t comm_PublishElement_fields[3];
extern const pb_field_t comm_Publish_fields[3];
extern const pb_field_t comm_MessageTypeAddPublish_fields[5];
extern const pb_field_t comm_MessageTypeDeletePublish_fields[2];
extern const pb_field_t comm_RequestAddPublish_fields[4];
extern const pb_field_t comm_RequestDeletePublish_fields[4];
extern const pb_field_t comm_ResponseBool_fields[4];
extern const pb_field_t comm_PoseEuler_fields[7];
extern const pb_field_t comm_MessageTypeFrame_fields[5];
extern const pb_field_t comm_RequestMessageTypeFrame_fields[4];

/* Maximum encoded size of messages (where known) */
#define comm_RequestHeader_size                  11
#define comm_ResponseHeader_size                 24
#define comm_Property_size                       2
#define comm_MessageTypeBool_size                2
#define comm_MessageTypeInt32_size               11
#define comm_RequestMessageTypeInt32_size        30
#define comm_RequestMessageTypeVoid_size         17
#define comm_ResponseMessageTypeInt32_size       43
#define comm_PublishElement_size                 1038
#define comm_Publish_size                        133259
#define comm_MessageTypeAddPublish_size          1441
#define comm_MessageTypeDeletePublish_size       11
#define comm_RequestAddPublish_size              1461
#define comm_RequestDeletePublish_size           30
#define comm_ResponseBool_size                   34
#define comm_PoseEuler_size                      54
#define comm_MessageTypeFrame_size               200
#define comm_RequestMessageTypeFrame_size        220

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define TEST_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
