/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.7 at Thu May  6 16:58:13 2021. */

#ifndef PB_MESSAGETYPE_POSTURE_PB_H_INCLUDED
#define PB_MESSAGETYPE_POSTURE_PB_H_INCLUDED
#include <pb.h>

#include "message_type/base.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _MessageType_Posture {
    int32_t wrist_flip;
    int32_t arm_up_down;
    int32_t arm_back_front;
    int32_t arm_left_right;
    MessageType_Int32List turn_cycle;
/* @@protoc_insertion_point(struct:MessageType_Posture) */
} MessageType_Posture;

/* Default values for struct fields */

/* Initializer values for message structs */
#define MessageType_Posture_init_default         {0, 0, 0, 0, MessageType_Int32List_init_default}
#define MessageType_Posture_init_zero            {0, 0, 0, 0, MessageType_Int32List_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define MessageType_Posture_wrist_flip_tag       1
#define MessageType_Posture_arm_up_down_tag      2
#define MessageType_Posture_arm_back_front_tag   3
#define MessageType_Posture_arm_left_right_tag   4
#define MessageType_Posture_turn_cycle_tag       5

/* Struct field encoding specification for nanopb */
extern const pb_field_t MessageType_Posture_fields[6];

/* Maximum encoded size of messages (where known) */
#define MessageType_Posture_size                 5679

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define POSTURE_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
