/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.7-dev at Fri Nov 16 10:39:17 2018. */

#ifndef PB_MESSAGETYPE_IO_DEVICE_INFO_PB_H_INCLUDED
#define PB_MESSAGETYPE_IO_DEVICE_INFO_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _MessageType_IoDeviceInfo {
    char device_type[256];
    char comm_type[256];
    int32_t device_index;
    int32_t address;
    int32_t input_num;
    int32_t output_num;
/* @@protoc_insertion_point(struct:MessageType_IoDeviceInfo) */
} MessageType_IoDeviceInfo;

/* Default values for struct fields */

/* Initializer values for message structs */
#define MessageType_IoDeviceInfo_init_default    {"", "", 0, 0, 0, 0}
#define MessageType_IoDeviceInfo_init_zero       {"", "", 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define MessageType_IoDeviceInfo_device_type_tag 1
#define MessageType_IoDeviceInfo_comm_type_tag   2
#define MessageType_IoDeviceInfo_device_index_tag 3
#define MessageType_IoDeviceInfo_address_tag     4
#define MessageType_IoDeviceInfo_input_num_tag   5
#define MessageType_IoDeviceInfo_output_num_tag  6

/* Struct field encoding specification for nanopb */
extern const pb_field_t MessageType_IoDeviceInfo_fields[7];

/* Maximum encoded size of messages (where known) */
#define MessageType_IoDeviceInfo_size            562

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define IO_DEVICE_INFO_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
