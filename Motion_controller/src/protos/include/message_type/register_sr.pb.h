/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.7-dev at Mon Jul 30 15:41:17 2018. */

#ifndef PB_MESSAGETYPE_REGISTER_SR_PB_H_INCLUDED
#define PB_MESSAGETYPE_REGISTER_SR_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _MessageType_RegisterSR {
    char value[254];
    int32_t id;
    char comment[128];
/* @@protoc_insertion_point(struct:MessageType_RegisterSR) */
} MessageType_RegisterSR;

/* Default values for struct fields */

/* Initializer values for message structs */
#define MessageType_RegisterSR_init_default      {"", 0, ""}
#define MessageType_RegisterSR_init_zero         {"", 0, ""}

/* Field tags (for use in manual encoding/decoding) */
#define MessageType_RegisterSR_value_tag         1
#define MessageType_RegisterSR_id_tag            2
#define MessageType_RegisterSR_comment_tag       3

/* Struct field encoding specification for nanopb */
extern const pb_field_t MessageType_RegisterSR_fields[4];

/* Maximum encoded size of messages (where known) */
#define MessageType_RegisterSR_size              399

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define REGISTER_SR_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
