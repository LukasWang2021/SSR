/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.7-dev at Thu Jul 11 16:28:39 2019. */

#ifndef PB_MESSAGETYPE_POSE_AND_POSTURE_PB_H_INCLUDED
#define PB_MESSAGETYPE_POSE_AND_POSTURE_PB_H_INCLUDED
#include <pb.h>

#include "message_type/base.pb.h"

#include "message_type/posture.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _MessageType_PoseAndPosture {
    MessageType_DoubleList pose;
    MessageType_Posture posture;
/* @@protoc_insertion_point(struct:MessageType_PoseAndPosture) */
} MessageType_PoseAndPosture;

/* Default values for struct fields */

/* Initializer values for message structs */
#define MessageType_PoseAndPosture_init_default  {MessageType_DoubleList_init_default, MessageType_Posture_init_default}
#define MessageType_PoseAndPosture_init_zero     {MessageType_DoubleList_init_zero, MessageType_Posture_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define MessageType_PoseAndPosture_pose_tag      1
#define MessageType_PoseAndPosture_posture_tag   2

/* Struct field encoding specification for nanopb */
extern const pb_field_t MessageType_PoseAndPosture_fields[3];

/* Maximum encoded size of messages (where known) */
#define MessageType_PoseAndPosture_size          2613

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define POSE_AND_POSTURE_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
