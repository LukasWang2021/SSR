/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.7-dev at Thu Dec 27 18:11:17 2018. */

#ifndef PB_MESSAGETYPE_MODBUS_SERVER_START_INFO_PB_H_INCLUDED
#define PB_MESSAGETYPE_MODBUS_SERVER_START_INFO_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _MessageType_ModbusServerStartInfo {
    bool has_ip;
    char ip[128];
    char name[128];
    int32_t response_delay;
/* @@protoc_insertion_point(struct:MessageType_ModbusServerStartInfo) */
} MessageType_ModbusServerStartInfo;

/* Default values for struct fields */

/* Initializer values for message structs */
#define MessageType_ModbusServerStartInfo_init_default {false, "", "", 0}
#define MessageType_ModbusServerStartInfo_init_zero {false, "", "", 0}

/* Field tags (for use in manual encoding/decoding) */
#define MessageType_ModbusServerStartInfo_ip_tag 1
#define MessageType_ModbusServerStartInfo_name_tag 2
#define MessageType_ModbusServerStartInfo_response_delay_tag 3

/* Struct field encoding specification for nanopb */
extern const pb_field_t MessageType_ModbusServerStartInfo_fields[4];

/* Maximum encoded size of messages (where known) */
#define MessageType_ModbusServerStartInfo_size   273

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MODBUS_SERVER_START_INFO_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
