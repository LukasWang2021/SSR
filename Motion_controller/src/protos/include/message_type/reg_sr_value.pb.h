/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.7-dev at Tue Aug 28 16:05:03 2018. */

#ifndef PB_MESSAGETYPE_REG_SR_VALUE_PB_H_INCLUDED
#define PB_MESSAGETYPE_REG_SR_VALUE_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _MessageType_SrValue {
    bool is_valid;
    char data[256];
/* @@protoc_insertion_point(struct:MessageType_SrValue) */
} MessageType_SrValue;

/* Default values for struct fields */

/* Initializer values for message structs */
#define MessageType_SrValue_init_default         {0, ""}
#define MessageType_SrValue_init_zero            {0, ""}

/* Field tags (for use in manual encoding/decoding) */
#define MessageType_SrValue_is_valid_tag         1
#define MessageType_SrValue_data_tag             2

/* Struct field encoding specification for nanopb */
extern const pb_field_t MessageType_SrValue_fields[3];

/* Maximum encoded size of messages (where known) */
#define MessageType_SrValue_size                 261

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define REG_SR_VALUE_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
