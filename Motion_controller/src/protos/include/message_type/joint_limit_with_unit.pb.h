/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.7-dev at Tue Aug 28 15:30:36 2018. */

#ifndef PB_MESSAGETYPE_JOINT_LIMIT_WITH_UNIT_PB_H_INCLUDED
#define PB_MESSAGETYPE_JOINT_LIMIT_WITH_UNIT_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _MessageType_DoubleWithUnit {
    double data;
    char unit[32];
/* @@protoc_insertion_point(struct:MessageType_DoubleWithUnit) */
} MessageType_DoubleWithUnit;

typedef struct _MessageType_JointLimitWithUnit {
    pb_size_t positive_list_count;
    MessageType_DoubleWithUnit positive_list[9];
    pb_size_t negative_list_count;
    MessageType_DoubleWithUnit negative_list[9];
/* @@protoc_insertion_point(struct:MessageType_JointLimitWithUnit) */
} MessageType_JointLimitWithUnit;

/* Default values for struct fields */

/* Initializer values for message structs */
#define MessageType_DoubleWithUnit_init_default  {0, ""}
#define MessageType_JointLimitWithUnit_init_default {0, {MessageType_DoubleWithUnit_init_default, MessageType_DoubleWithUnit_init_default, MessageType_DoubleWithUnit_init_default, MessageType_DoubleWithUnit_init_default, MessageType_DoubleWithUnit_init_default, MessageType_DoubleWithUnit_init_default, MessageType_DoubleWithUnit_init_default, MessageType_DoubleWithUnit_init_default, MessageType_DoubleWithUnit_init_default}, 0, {MessageType_DoubleWithUnit_init_default, MessageType_DoubleWithUnit_init_default, MessageType_DoubleWithUnit_init_default, MessageType_DoubleWithUnit_init_default, MessageType_DoubleWithUnit_init_default, MessageType_DoubleWithUnit_init_default, MessageType_DoubleWithUnit_init_default, MessageType_DoubleWithUnit_init_default, MessageType_DoubleWithUnit_init_default}}
#define MessageType_DoubleWithUnit_init_zero     {0, ""}
#define MessageType_JointLimitWithUnit_init_zero {0, {MessageType_DoubleWithUnit_init_zero, MessageType_DoubleWithUnit_init_zero, MessageType_DoubleWithUnit_init_zero, MessageType_DoubleWithUnit_init_zero, MessageType_DoubleWithUnit_init_zero, MessageType_DoubleWithUnit_init_zero, MessageType_DoubleWithUnit_init_zero, MessageType_DoubleWithUnit_init_zero, MessageType_DoubleWithUnit_init_zero}, 0, {MessageType_DoubleWithUnit_init_zero, MessageType_DoubleWithUnit_init_zero, MessageType_DoubleWithUnit_init_zero, MessageType_DoubleWithUnit_init_zero, MessageType_DoubleWithUnit_init_zero, MessageType_DoubleWithUnit_init_zero, MessageType_DoubleWithUnit_init_zero, MessageType_DoubleWithUnit_init_zero, MessageType_DoubleWithUnit_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define MessageType_DoubleWithUnit_data_tag      1
#define MessageType_DoubleWithUnit_unit_tag      2
#define MessageType_JointLimitWithUnit_positive_list_tag 1
#define MessageType_JointLimitWithUnit_negative_list_tag 2

/* Struct field encoding specification for nanopb */
extern const pb_field_t MessageType_DoubleWithUnit_fields[3];
extern const pb_field_t MessageType_JointLimitWithUnit_fields[3];

/* Maximum encoded size of messages (where known) */
#define MessageType_DoubleWithUnit_size          43
#define MessageType_JointLimitWithUnit_size      810

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define JOINT_LIMIT_WITH_UNIT_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
