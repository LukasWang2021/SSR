/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.7 at Wed Dec 18 15:09:47 2019. */

#ifndef PB_EVENT_EVENT_HEADER_PB_H_INCLUDED
#define PB_EVENT_EVENT_HEADER_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _Event_Header {
    uint64_t time_stamp;
    int32_t type;
    int32_t id;
/* @@protoc_insertion_point(struct:Event_Header) */
} Event_Header;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Event_Header_init_default                {0, 0, 0}
#define Event_Header_init_zero                   {0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define Event_Header_time_stamp_tag              1
#define Event_Header_type_tag                    2
#define Event_Header_id_tag                      3

/* Struct field encoding specification for nanopb */
extern const pb_field_t Event_Header_fields[4];

/* Maximum encoded size of messages (where known) */
#define Event_Header_size                        33

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define EVENT_HEADER_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
