/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.7-dev at Mon Jul 30 15:41:17 2018. */

#ifndef PB_MESSAGETYPE_REGISTER_PR_PB_H_INCLUDED
#define PB_MESSAGETYPE_REGISTER_PR_PB_H_INCLUDED
#include <pb.h>

#include "message_type/pose_euler.pb.h"

#include "message_type/joint_list.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _MessageType_RegisterPR {
    bool has_pose;
    MessageType_PoseEuler pose;
    bool has_joint;
    MessageType_JointList joint;
    int32_t type;
    int32_t id;
    char comment[128];
/* @@protoc_insertion_point(struct:MessageType_RegisterPR) */
} MessageType_RegisterPR;

/* Default values for struct fields */

/* Initializer values for message structs */
#define MessageType_RegisterPR_init_default      {false, MessageType_PoseEuler_init_default, false, MessageType_JointList_init_default, 0, 0, ""}
#define MessageType_RegisterPR_init_zero         {false, MessageType_PoseEuler_init_zero, false, MessageType_JointList_init_zero, 0, 0, ""}

/* Field tags (for use in manual encoding/decoding) */
#define MessageType_RegisterPR_pose_tag          1
#define MessageType_RegisterPR_joint_tag         2
#define MessageType_RegisterPR_type_tag          3
#define MessageType_RegisterPR_id_tag            4
#define MessageType_RegisterPR_comment_tag       5

/* Struct field encoding specification for nanopb */
extern const pb_field_t MessageType_RegisterPR_fields[6];

/* Maximum encoded size of messages (where known) */
#define MessageType_RegisterPR_size              292

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define REGISTER_PR_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
