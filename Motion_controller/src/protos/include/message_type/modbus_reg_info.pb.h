/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.7-dev at Fri Dec  7 11:09:29 2018. */

#ifndef PB_MESSAGETYPE_MODBUS_REG_INFO_PB_H_INCLUDED
#define PB_MESSAGETYPE_MODBUS_REG_INFO_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _MessageType_ModbusRegAddrInfo {
    int32_t id;
    int32_t address;
    int32_t number;
/* @@protoc_insertion_point(struct:MessageType_ModbusRegAddrInfo) */
} MessageType_ModbusRegAddrInfo;

typedef struct _MessageType_ModbusRegInfo {
    int32_t id;
    int32_t address;
    int32_t number;
    pb_size_t value_count;
    uint32_t value[64];
/* @@protoc_insertion_point(struct:MessageType_ModbusRegInfo) */
} MessageType_ModbusRegInfo;

typedef struct _MessageType_ModbusRegValueList {
    pb_size_t value_count;
    uint32_t value[64];
/* @@protoc_insertion_point(struct:MessageType_ModbusRegValueList) */
} MessageType_ModbusRegValueList;

/* Default values for struct fields */

/* Initializer values for message structs */
#define MessageType_ModbusRegInfo_init_default   {0, 0, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define MessageType_ModbusRegValueList_init_default {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define MessageType_ModbusRegAddrInfo_init_default {0, 0, 0}
#define MessageType_ModbusRegInfo_init_zero      {0, 0, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define MessageType_ModbusRegValueList_init_zero {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define MessageType_ModbusRegAddrInfo_init_zero  {0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define MessageType_ModbusRegAddrInfo_id_tag     1
#define MessageType_ModbusRegAddrInfo_address_tag 2
#define MessageType_ModbusRegAddrInfo_number_tag 3
#define MessageType_ModbusRegInfo_id_tag         1
#define MessageType_ModbusRegInfo_address_tag    2
#define MessageType_ModbusRegInfo_number_tag     3
#define MessageType_ModbusRegInfo_value_tag      4
#define MessageType_ModbusRegValueList_value_tag 1

/* Struct field encoding specification for nanopb */
extern const pb_field_t MessageType_ModbusRegInfo_fields[5];
extern const pb_field_t MessageType_ModbusRegValueList_fields[2];
extern const pb_field_t MessageType_ModbusRegAddrInfo_fields[4];

/* Maximum encoded size of messages (where known) */
#define MessageType_ModbusRegInfo_size           417
#define MessageType_ModbusRegValueList_size      384
#define MessageType_ModbusRegAddrInfo_size       33

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MODBUS_REG_INFO_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
