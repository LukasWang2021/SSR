/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.7-dev at Mon Dec 17 13:26:35 2018. */

#ifndef PB_MESSAGETYPE_MODBUS_FUNCTION_PB_H_INCLUDED
#define PB_MESSAGETYPE_MODBUS_FUNCTION_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _MessageType_ModbusFunctionType {
    MessageType_ModbusFunctionType_COIL = 1,
    MessageType_ModbusFunctionType_DISCREPTE_INPUT = 2,
    MessageType_ModbusFunctionType_INPUT_REGISTER = 3,
    MessageType_ModbusFunctionType_HOLDING_REGISTER = 4
} MessageType_ModbusFunctionType;
#define _MessageType_ModbusFunctionType_MIN MessageType_ModbusFunctionType_COIL
#define _MessageType_ModbusFunctionType_MAX MessageType_ModbusFunctionType_HOLDING_REGISTER
#define _MessageType_ModbusFunctionType_ARRAYSIZE ((MessageType_ModbusFunctionType)(MessageType_ModbusFunctionType_HOLDING_REGISTER+1))

/* Struct definitions */
typedef struct _MessageType_ModbusFunctionAddrInfo {
    int32_t address;
    int32_t number;
    bool is_valid;
/* @@protoc_insertion_point(struct:MessageType_ModbusFunctionAddrInfo) */
} MessageType_ModbusFunctionAddrInfo;

typedef struct _MessageType_ModbusFunctionInfo {
    MessageType_ModbusFunctionType type;
    int32_t address;
    int32_t number;
    bool is_valid;
/* @@protoc_insertion_point(struct:MessageType_ModbusFunctionInfo) */
} MessageType_ModbusFunctionInfo;

/* Default values for struct fields */

/* Initializer values for message structs */
#define MessageType_ModbusFunctionAddrInfo_init_default {0, 0, 0}
#define MessageType_ModbusFunctionInfo_init_default {(MessageType_ModbusFunctionType)0, 0, 0, 0}
#define MessageType_ModbusFunctionAddrInfo_init_zero {0, 0, 0}
#define MessageType_ModbusFunctionInfo_init_zero {(MessageType_ModbusFunctionType)0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define MessageType_ModbusFunctionAddrInfo_address_tag 1
#define MessageType_ModbusFunctionAddrInfo_number_tag 2
#define MessageType_ModbusFunctionAddrInfo_is_valid_tag 3
#define MessageType_ModbusFunctionInfo_type_tag  1
#define MessageType_ModbusFunctionInfo_address_tag 2
#define MessageType_ModbusFunctionInfo_number_tag 3
#define MessageType_ModbusFunctionInfo_is_valid_tag 4

/* Struct field encoding specification for nanopb */
extern const pb_field_t MessageType_ModbusFunctionAddrInfo_fields[4];
extern const pb_field_t MessageType_ModbusFunctionInfo_fields[5];

/* Maximum encoded size of messages (where known) */
#define MessageType_ModbusFunctionAddrInfo_size  24
#define MessageType_ModbusFunctionInfo_size      26

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MODBUS_FUNCTION_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
