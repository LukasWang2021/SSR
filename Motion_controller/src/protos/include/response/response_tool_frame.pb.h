/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.7-dev at Wed Aug 22 14:31:00 2018. */

#ifndef PB_RESPONSEMESSAGETYPE_RESPONSE_TOOL_FRAME_PB_H_INCLUDED
#define PB_RESPONSEMESSAGETYPE_RESPONSE_TOOL_FRAME_PB_H_INCLUDED
#include <pb.h>

#include "protocal/response_header.pb.h"

#include "protocal/comm.pb.h"

#include "message_type/tool_frame.pb.h"

#include "message_type/base.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _ResponseMessageType_Uint64_ToolInfo {
    Response_Header header;
    Comm_Property property;
    MessageType_Uint64 error_code;
    MessageType_ToolInfo data;
/* @@protoc_insertion_point(struct:ResponseMessageType_Uint64_ToolInfo) */
} ResponseMessageType_Uint64_ToolInfo;

typedef struct _ResponseMessageType_Uint64_ToolSummaryList {
    Response_Header header;
    Comm_Property property;
    MessageType_Uint64 error_code;
    MessageType_ToolSummaryList data;
/* @@protoc_insertion_point(struct:ResponseMessageType_Uint64_ToolSummaryList) */
} ResponseMessageType_Uint64_ToolSummaryList;

/* Default values for struct fields */

/* Initializer values for message structs */
#define ResponseMessageType_Uint64_ToolInfo_init_default {Response_Header_init_default, Comm_Property_init_default, MessageType_Uint64_init_default, MessageType_ToolInfo_init_default}
#define ResponseMessageType_Uint64_ToolSummaryList_init_default {Response_Header_init_default, Comm_Property_init_default, MessageType_Uint64_init_default, MessageType_ToolSummaryList_init_default}
#define ResponseMessageType_Uint64_ToolInfo_init_zero {Response_Header_init_zero, Comm_Property_init_zero, MessageType_Uint64_init_zero, MessageType_ToolInfo_init_zero}
#define ResponseMessageType_Uint64_ToolSummaryList_init_zero {Response_Header_init_zero, Comm_Property_init_zero, MessageType_Uint64_init_zero, MessageType_ToolSummaryList_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define ResponseMessageType_Uint64_ToolInfo_header_tag 1
#define ResponseMessageType_Uint64_ToolInfo_property_tag 2
#define ResponseMessageType_Uint64_ToolInfo_error_code_tag 3
#define ResponseMessageType_Uint64_ToolInfo_data_tag 4
#define ResponseMessageType_Uint64_ToolSummaryList_header_tag 1
#define ResponseMessageType_Uint64_ToolSummaryList_property_tag 2
#define ResponseMessageType_Uint64_ToolSummaryList_error_code_tag 3
#define ResponseMessageType_Uint64_ToolSummaryList_data_tag 4

/* Struct field encoding specification for nanopb */
extern const pb_field_t ResponseMessageType_Uint64_ToolInfo_fields[5];
extern const pb_field_t ResponseMessageType_Uint64_ToolSummaryList_fields[5];

/* Maximum encoded size of messages (where known) */
#define ResponseMessageType_Uint64_ToolInfo_size (379 + MessageType_PoseEuler_size)
#define ResponseMessageType_Uint64_ToolSummaryList_size 5143

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define RESPONSE_TOOL_FRAME_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
