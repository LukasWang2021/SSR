/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.7-dev at Mon Apr 23 15:38:44 2018. */

#ifndef PB_BASE_TYPES_VERSION_PB_H_INCLUDED
#define PB_BASE_TYPES_VERSION_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _base_types_VersionInfo {
    int32_t major;
    int32_t minor;
/* @@protoc_insertion_point(struct:base_types_VersionInfo) */
} base_types_VersionInfo;

/* Default values for struct fields */

/* Initializer values for message structs */
#define base_types_VersionInfo_init_default      {0, 0}
#define base_types_VersionInfo_init_zero         {0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define base_types_VersionInfo_major_tag         1
#define base_types_VersionInfo_minor_tag         2

/* Struct field encoding specification for nanopb */
extern const pb_field_t base_types_VersionInfo_fields[3];

/* Maximum encoded size of messages (where known) */
#define base_types_VersionInfo_size              22

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define VERSION_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
