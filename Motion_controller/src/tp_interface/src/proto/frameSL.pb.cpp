/* Automatically generated nanopb constant definitions */
/* Generated by nanopb-0.3.7-dev at Tue May 22 10:16:08 2018. */

#include "frameSL.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif



const pb_field_t frame_spec_Pose_fields[4] = {
    PB_FIELD(  1, DOUBLE  , REQUIRED, STATIC  , FIRST, frame_spec_Pose, x, x, 0),
    PB_FIELD(  2, DOUBLE  , REQUIRED, STATIC  , OTHER, frame_spec_Pose, y, x, 0),
    PB_FIELD(  3, DOUBLE  , REQUIRED, STATIC  , OTHER, frame_spec_Pose, z, y, 0),
    PB_LAST_FIELD
};

const pb_field_t frame_spec_Euler_fields[4] = {
    PB_FIELD(  1, DOUBLE  , REQUIRED, STATIC  , FIRST, frame_spec_Euler, a, a, 0),
    PB_FIELD(  2, DOUBLE  , REQUIRED, STATIC  , OTHER, frame_spec_Euler, b, a, 0),
    PB_FIELD(  3, DOUBLE  , REQUIRED, STATIC  , OTHER, frame_spec_Euler, c, b, 0),
    PB_LAST_FIELD
};

const pb_field_t frame_spec_PoseEuler_fields[3] = {
    PB_FIELD(  1, MESSAGE , REQUIRED, STATIC  , FIRST, frame_spec_PoseEuler, position, position, &frame_spec_Pose_fields),
    PB_FIELD(  2, MESSAGE , REQUIRED, STATIC  , OTHER, frame_spec_PoseEuler, orientation, position, &frame_spec_Euler_fields),
    PB_LAST_FIELD
};

const pb_field_t frame_spec_Frame_fields[5] = {
    PB_FIELD(  1, INT32   , REQUIRED, STATIC  , FIRST, frame_spec_Frame, id, id, 0),
    PB_FIELD(  2, BOOL    , OPTIONAL, STATIC  , OTHER, frame_spec_Frame, is_valid, id, 0),
    PB_FIELD(  3, STRING  , OPTIONAL, STATIC  , OTHER, frame_spec_Frame, comment, is_valid, 0),
    PB_FIELD(  4, MESSAGE , OPTIONAL, STATIC  , OTHER, frame_spec_Frame, data, comment, &frame_spec_PoseEuler_fields),
    PB_LAST_FIELD
};

const pb_field_t frame_spec_Interface_fields[3] = {
    PB_FIELD(  1, MESSAGE , REQUIRED, STATIC  , FIRST, frame_spec_Interface, frame, frame, &frame_spec_Frame_fields),
    PB_FIELD(  2, UENUM   , OPTIONAL, STATIC  , OTHER, frame_spec_Interface, operation, frame, 0),
    PB_LAST_FIELD
};

const pb_field_t frame_spec_ActivateInterface_fields[2] = {
    PB_FIELD(  1, INT32   , OPTIONAL, STATIC  , FIRST, frame_spec_ActivateInterface, id, id, 0),
    PB_LAST_FIELD
};

const pb_field_t frame_spec_IdListInterface_fields[3] = {
    PB_FIELD(  1, INT32   , OPTIONAL, STATIC  , FIRST, frame_spec_IdListInterface, total_id, total_id, 0),
    PB_FIELD(  2, INT32   , REPEATED, STATIC  , OTHER, frame_spec_IdListInterface, id, total_id, 0),
    PB_LAST_FIELD
};


/* Check that field information fits in pb_field_t */
#if !defined(PB_FIELD_32BIT)
/* If you get an error here, it means that you need to define PB_FIELD_32BIT
 * compile-time option. You can do that in pb.h or on compiler command line.
 * 
 * The reason you need to do this is that some of your messages contain tag
 * numbers or field sizes that are larger than what can fit in 8 or 16 bit
 * field descriptors.
 */
PB_STATIC_ASSERT((pb_membersize(frame_spec_PoseEuler, position) < 65536 && pb_membersize(frame_spec_PoseEuler, orientation) < 65536 && pb_membersize(frame_spec_Frame, data) < 65536 && pb_membersize(frame_spec_Interface, frame) < 65536), YOU_MUST_DEFINE_PB_FIELD_32BIT_FOR_MESSAGES_frame_spec_Pose_frame_spec_Euler_frame_spec_PoseEuler_frame_spec_Frame_frame_spec_Interface_frame_spec_ActivateInterface_frame_spec_IdListInterface)
#endif

#if !defined(PB_FIELD_16BIT) && !defined(PB_FIELD_32BIT)
/* If you get an error here, it means that you need to define PB_FIELD_16BIT
 * compile-time option. You can do that in pb.h or on compiler command line.
 * 
 * The reason you need to do this is that some of your messages contain tag
 * numbers or field sizes that are larger than what can fit in the default
 * 8 bit descriptors.
 */
PB_STATIC_ASSERT((pb_membersize(frame_spec_PoseEuler, position) < 256 && pb_membersize(frame_spec_PoseEuler, orientation) < 256 && pb_membersize(frame_spec_Frame, data) < 256 && pb_membersize(frame_spec_Interface, frame) < 256), YOU_MUST_DEFINE_PB_FIELD_16BIT_FOR_MESSAGES_frame_spec_Pose_frame_spec_Euler_frame_spec_PoseEuler_frame_spec_Frame_frame_spec_Interface_frame_spec_ActivateInterface_frame_spec_IdListInterface)
#endif


/* On some platforms (such as AVR), double is really float.
 * These are not directly supported by nanopb, but see example_avr_double.
 * To get rid of this error, remove any double fields from your .proto.
 */
PB_STATIC_ASSERT(sizeof(double) == 8, DOUBLE_MUST_BE_8_BYTES)

/* @@protoc_insertion_point(eof) */
