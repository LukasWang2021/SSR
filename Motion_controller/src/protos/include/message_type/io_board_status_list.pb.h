/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.7-dev at Tue Dec 11 17:36:42 2018. */

#ifndef PB_MESSAGETYPE_IO_BOARD_STATUS_LIST_PB_H_INCLUDED
#define PB_MESSAGETYPE_IO_BOARD_STATUS_LIST_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _MessageType_IoBoardStatus {
    uint32_t id;
    uint32_t DI;
    uint32_t DO;
    uint32_t RI;
    uint32_t RO;
    uint32_t valid;
/* @@protoc_insertion_point(struct:MessageType_IoBoardStatus) */
} MessageType_IoBoardStatus;

typedef struct _MessageType_IoBoardStatusList {
    pb_size_t io_board_count;
    MessageType_IoBoardStatus io_board[16];
/* @@protoc_insertion_point(struct:MessageType_IoBoardStatusList) */
} MessageType_IoBoardStatusList;

/* Default values for struct fields */

/* Initializer values for message structs */
#define MessageType_IoBoardStatus_init_default   {0, 0, 0, 0, 0, 0}
#define MessageType_IoBoardStatusList_init_default {0, {MessageType_IoBoardStatus_init_default, MessageType_IoBoardStatus_init_default, MessageType_IoBoardStatus_init_default, MessageType_IoBoardStatus_init_default, MessageType_IoBoardStatus_init_default, MessageType_IoBoardStatus_init_default, MessageType_IoBoardStatus_init_default, MessageType_IoBoardStatus_init_default, MessageType_IoBoardStatus_init_default, MessageType_IoBoardStatus_init_default, MessageType_IoBoardStatus_init_default, MessageType_IoBoardStatus_init_default, MessageType_IoBoardStatus_init_default, MessageType_IoBoardStatus_init_default, MessageType_IoBoardStatus_init_default, MessageType_IoBoardStatus_init_default}}
#define MessageType_IoBoardStatus_init_zero      {0, 0, 0, 0, 0, 0}
#define MessageType_IoBoardStatusList_init_zero  {0, {MessageType_IoBoardStatus_init_zero, MessageType_IoBoardStatus_init_zero, MessageType_IoBoardStatus_init_zero, MessageType_IoBoardStatus_init_zero, MessageType_IoBoardStatus_init_zero, MessageType_IoBoardStatus_init_zero, MessageType_IoBoardStatus_init_zero, MessageType_IoBoardStatus_init_zero, MessageType_IoBoardStatus_init_zero, MessageType_IoBoardStatus_init_zero, MessageType_IoBoardStatus_init_zero, MessageType_IoBoardStatus_init_zero, MessageType_IoBoardStatus_init_zero, MessageType_IoBoardStatus_init_zero, MessageType_IoBoardStatus_init_zero, MessageType_IoBoardStatus_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define MessageType_IoBoardStatus_id_tag         1
#define MessageType_IoBoardStatus_DI_tag         2
#define MessageType_IoBoardStatus_DO_tag         3
#define MessageType_IoBoardStatus_RI_tag         4
#define MessageType_IoBoardStatus_RO_tag         5
#define MessageType_IoBoardStatus_valid_tag      6
#define MessageType_IoBoardStatusList_io_board_tag 1

/* Struct field encoding specification for nanopb */
extern const pb_field_t MessageType_IoBoardStatus_fields[7];
extern const pb_field_t MessageType_IoBoardStatusList_fields[2];

/* Maximum encoded size of messages (where known) */
#define MessageType_IoBoardStatus_size           36
#define MessageType_IoBoardStatusList_size       608

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define IO_BOARD_STATUS_LIST_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
