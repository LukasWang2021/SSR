/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.7-dev at Mon Feb 18 17:12:52 2019. */

#ifndef PB_MESSAGETYPE_MODBUS_CLIENT_CTRL_STATUS_PB_H_INCLUDED
#define PB_MESSAGETYPE_MODBUS_CLIENT_CTRL_STATUS_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _MessageType_ModbusClientCtrlStatus {
    int32_t id;
    int32_t status;
/* @@protoc_insertion_point(struct:MessageType_ModbusClientCtrlStatus) */
} MessageType_ModbusClientCtrlStatus;

typedef struct _MessageType_ModbusClientCtrlStatusList {
    pb_size_t ctrl_status_count;
    MessageType_ModbusClientCtrlStatus ctrl_status[16];
/* @@protoc_insertion_point(struct:MessageType_ModbusClientCtrlStatusList) */
} MessageType_ModbusClientCtrlStatusList;

/* Default values for struct fields */

/* Initializer values for message structs */
#define MessageType_ModbusClientCtrlStatus_init_default {0, 0}
#define MessageType_ModbusClientCtrlStatusList_init_default {0, {MessageType_ModbusClientCtrlStatus_init_default, MessageType_ModbusClientCtrlStatus_init_default, MessageType_ModbusClientCtrlStatus_init_default, MessageType_ModbusClientCtrlStatus_init_default, MessageType_ModbusClientCtrlStatus_init_default, MessageType_ModbusClientCtrlStatus_init_default, MessageType_ModbusClientCtrlStatus_init_default, MessageType_ModbusClientCtrlStatus_init_default, MessageType_ModbusClientCtrlStatus_init_default, MessageType_ModbusClientCtrlStatus_init_default, MessageType_ModbusClientCtrlStatus_init_default, MessageType_ModbusClientCtrlStatus_init_default, MessageType_ModbusClientCtrlStatus_init_default, MessageType_ModbusClientCtrlStatus_init_default, MessageType_ModbusClientCtrlStatus_init_default, MessageType_ModbusClientCtrlStatus_init_default}}
#define MessageType_ModbusClientCtrlStatus_init_zero {0, 0}
#define MessageType_ModbusClientCtrlStatusList_init_zero {0, {MessageType_ModbusClientCtrlStatus_init_zero, MessageType_ModbusClientCtrlStatus_init_zero, MessageType_ModbusClientCtrlStatus_init_zero, MessageType_ModbusClientCtrlStatus_init_zero, MessageType_ModbusClientCtrlStatus_init_zero, MessageType_ModbusClientCtrlStatus_init_zero, MessageType_ModbusClientCtrlStatus_init_zero, MessageType_ModbusClientCtrlStatus_init_zero, MessageType_ModbusClientCtrlStatus_init_zero, MessageType_ModbusClientCtrlStatus_init_zero, MessageType_ModbusClientCtrlStatus_init_zero, MessageType_ModbusClientCtrlStatus_init_zero, MessageType_ModbusClientCtrlStatus_init_zero, MessageType_ModbusClientCtrlStatus_init_zero, MessageType_ModbusClientCtrlStatus_init_zero, MessageType_ModbusClientCtrlStatus_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define MessageType_ModbusClientCtrlStatus_id_tag 1
#define MessageType_ModbusClientCtrlStatus_status_tag 2
#define MessageType_ModbusClientCtrlStatusList_ctrl_status_tag 1

/* Struct field encoding specification for nanopb */
extern const pb_field_t MessageType_ModbusClientCtrlStatus_fields[3];
extern const pb_field_t MessageType_ModbusClientCtrlStatusList_fields[2];

/* Maximum encoded size of messages (where known) */
#define MessageType_ModbusClientCtrlStatus_size  22
#define MessageType_ModbusClientCtrlStatusList_size 384

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MODBUS_CLIENT_CTRL_STATUS_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
