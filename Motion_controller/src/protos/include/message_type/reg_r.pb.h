/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.7-dev at Fri Aug 10 13:55:07 2018. */

#ifndef PB_MESSAGETYPE_REG_R_PB_H_INCLUDED
#define PB_MESSAGETYPE_REG_R_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _MessageType_RRegData {
    int32_t id;
    char name[32];
    char comment[256];
    double value;
/* @@protoc_insertion_point(struct:MessageType_RRegData) */
} MessageType_RRegData;

/* Default values for struct fields */

/* Initializer values for message structs */
#define MessageType_RRegData_init_default        {0, "", "", 0}
#define MessageType_RRegData_init_zero           {0, "", "", 0}

/* Field tags (for use in manual encoding/decoding) */
#define MessageType_RRegData_id_tag              1
#define MessageType_RRegData_name_tag            2
#define MessageType_RRegData_comment_tag         3
#define MessageType_RRegData_value_tag           4

/* Struct field encoding specification for nanopb */
extern const pb_field_t MessageType_RRegData_fields[5];

/* Maximum encoded size of messages (where known) */
#define MessageType_RRegData_size                313

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define REG_R_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
